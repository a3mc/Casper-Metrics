<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Casper Metrics API</title>
    <link rel="stylesheet" type="text/css" href="/css/swagger.css">
    <link rel="shortcut icon" type="image/x-icon" href="/css/favicon-network.png"/>
    <style>
        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
            height: 100%;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            min-height: 100%;
        }

        #charts {
            display: none;
        }

        .current-metrics {
            display: none;
            margin-top: -38px;
            margin-left: -4px;
            width: calc(100% - 240px);
        }

        .current-metrics .metrics-block {
            width: 25%;
            margin: 5px;
            background: #122e43;
        }
        .metrics-block .metrics-head {
            height: 30px;
            text-align: center;
            background: #1d3d55;
            font-size: 13px;
            padding: 6px;
        }
        .metrics-block .metrics-body {
            height: 40px;
            text-align: center;
            font-size: 15px;
            padding: 10px;
        }
        #unlock-table {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
        }
        #unlock-table td,
        #unlock-table th {
            padding: 10px;
            margin: 5px;
        }
        #unlock-table th {
            background: #1e3d55;
        }
        #unlock-table td {
            background: #122e43;
            text-align: center;
        }
        .float-right a[rel="noopener noreferrer"] {
            display: none;
        }
        h2.ranges a {
            color: #667;
            text-decoration: underline;
            font-size: 16px;
        }
        h2.ranges {
            text-align: right;
            padding-right: 0;
            margin-right: 0;
            margin-bottom: 0;
            padding-botton: 0;
        }
        h2.ranges a.active {

            color: #eef;
            text-decoration: none;
        }
        .chart-block {
            background: #2d3f5c;
            padding: 20px;
            max-width: 1150px;
            min-height: 400px;
            transition: height 0.4s ease;
            margin: 100px auto 0;
            text-align: center;
            box-shadow: 2px 2px 5px #0003;
        }

        .main-menu {
            display: none;
            margin-top: 35px;
            font-size: 24px;
            padding: 3px;
            height: 36px;
            transition: 0.4s ease all;
        }
        .main-menu a {
            color: white;
            margin-right: 2px;
            display: inline-block;
            background: #223048;
            padding: 3px 30px;
            text-decoration: none;
            width: 140px;
            text-align: center;
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
        }
        .main-menu a.active,
        .main-menu a:hover {
            background: #2d5890;
        }
        .footer {
            display: none;
            padding: 50px;
            margin-top: 30px;
            background: linear-gradient(0deg, #37486c, #2d3f5c);
            border-top: 1px solid #1c2b47;
        }
        .footer .inner {
            max-width: 620px;
            margin: 0 auto;
        }
        .footer .first-block {
            width: 400px;
            display: inline-block;
            line-height: 25px;
        }
        .footer .second-block {
            display: inline-block;
            line-height: 25px;
        }
        .footer a, .footer a:visited, .footer a:hover, .footer a:active {
            color: #6a91db;
            margin-top: 10px;
            text-decoration: none;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>

<body>
<div class="current-metrics">
    <div class="metrics-block">
        <div class="metrics-head">
            Total Supply
        </div>
        <div class="metrics-body" id="total-supply">
            0
        </div>
    </div>
    <div class="metrics-block">
        <div class="metrics-head">
            Circulation Supply
        </div>
        <div class="metrics-body" id="circulation-supply">
            0
        </div>
    </div>
    <div class="metrics-block">
        <div class="metrics-head">
            Validators Weight
        </div>
        <div class="metrics-body" id="validators-weight">
           0
        </div>
    </div>
    <div class="metrics-block">
        <div class="metrics-head">
            Deploys/Transfers
        </div>
        <div class="metrics-body" id="deploys-transfers">
            0
        </div>
    </div>
</div>
<div class="main-menu">
    <a href="javascript:void(0)" id="link-charts" onclick="showCharts()">Charts</a>
    <a href="javascript:void(0)" id="link-api" onclick="showApi()">API</a>
</div>
<div id="swagger-ui"></div>
<div style="margin-top: 90px; padding: 0px 50px 50px; display: none;" id="charts">
    <div class="chart-block" style="margin-top: 80px">
        <canvas id="myChart1"></canvas>
    </div>
    <div class="chart-block">
        <canvas id="myChart5"></canvas>
    </div>
    <div class="chart-block">
        <canvas id="myChart4"></canvas>
    </div>
    <div class="chart-block">
        <canvas id="myChart2"></canvas>
    </div>
    <div class="chart-block">
        <canvas id="myChart6"></canvas>
    </div>

    <!--    <div style="max-width:800px; margin: 100px auto 0;text-align: center">-->
    <!--        <canvas id="myChart5"></canvas>-->
    <!--    </div>-->
</div>
<script src="./swagger-ui-bundle.js"></script>
<script src="./swagger-ui-standalone-preset.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    window.onload = function () {
        // Build a system
        const ui = SwaggerUIBundle({
            url: '<%- openApiSpecUrl %>',
            dom_id: '#swagger-ui',
            deepLinking: true,
            filter: true,
            defaultModelsExpandDepth: -1,
            defaultModelExpandDepth: -1,
            presets: [
                SwaggerUIBundle.presets.apis,
                // SwaggerUIStandalonePreset
                SwaggerUIStandalonePreset.slice(1) // Disable the top bar
            ],
            plugins: [
                SwaggerUIBundle.plugins.DownloadUrl,
                SwaggerUIBundle.plugins.RequestSnippets
            ],
            layout: 'StandaloneLayout',
            displayRequestDuration: false,
            validatorUrl: null,
            requestSnippets: {
                generators: {
                    "curl_bash": {
                        title: "cURL (bash)",
                        syntax: "bash"
                    },
                    "curl_powershell": {
                        title: "cURL (PowerShell)",
                        syntax: "powershell"
                    },
                    "curl_cmd": {
                        title: "cURL (CMD)",
                        syntax: "bash"
                    },
                },
                defaultExpanded: true,
                languagesMask: null, // e.g. only show curl bash = ["curl_bash"]
            },
            onComplete: () => {
                document.querySelector( '.information-container.wrapper' )
                    .appendChild( document.querySelector( '.current-metrics' ) );

                document.querySelector( '.current-metrics' ).style.display = 'flex';

                document.querySelector( '.information-container.wrapper' )
                    .appendChild( document.querySelector( '.main-menu' ) );

                document.querySelector( '.main-menu' ).style.display = 'block';

                console.log(location.hash)
                if ( location.hash.match ( /^#\// ) ) {
                    showApi();
                } else {
                    console.log('show charts')
                    showCharts();
                }

                fetch( '/era' )
                    .then( response => response.json() )
                    .then( response => {
                        document.getElementById( 'total-supply' ).innerText =
                            numberWithCommas( response[0].totalSupply );

                        document.getElementById( 'circulation-supply' ).innerText =
                            numberWithCommas( response[0].circulatingSupply );

                        document.getElementById( 'validators-weight' ).innerText =
                            numberWithCommas( response[0].validatorsWeights );
                    } );
            }
        })

        window.ui = ui

        graphsAlltime();

    }

    const data = {
        labels: [],
        datasets: [
            {
                label: 'Circulating Supply',
                backgroundColor: '#2bac15',
                borderColor: '#2bac15',
                color: '#f5f5f5',
                data: [],
            }
        ]
    };

    const totalSupply = {
        labels: [],
        datasets: [
            {
                label: 'Total Supply',
                backgroundColor: '#aca815',
                borderColor: '#aca815',
                color: '#f5f5f5',
                data: [],
            }
        ]
    };

    const transactions = {
        labels: [],
        datasets: [
            {
                label: 'Deploys',
                backgroundColor: '#aca815',
                borderColor: '#aca815',
                color: '#f5f5f5',
                data: [],
            },
            {
                label: 'Transfers',
                backgroundColor: '#15ac98',
                borderColor: '#15ac98',
                color: '#f5f5f5',
                data: [],
            }
        ]
    };

    const stakedData = {
        labels: [],
        datasets: [
            {
                label: 'Validators Weights',
                backgroundColor: '#15ac98',
                borderColor: '#15ac98',
                color: '#f5f5f5',
                data: [],
            }
        ]
    };

    const validatorsDelegatorsCount = {
        labels: [],
        datasets: [
            {
                label: 'Validators count',
                backgroundColor: '#32ac15',
                borderColor: '#32ac15',
                color: '#f5f5f5',
                data: [],
                hidden: true,
            },
            {
                label: 'Delegators count',
                backgroundColor: '#1596ac',
                borderColor: '#1596ac',
                color: '#f5f5f5',
                data: [],
            }
        ]
    };

    const validatorsRewards = {
        labels: [],
        datasets: [
            {
                label: 'Validators',
                backgroundColor: '#32ac15',
                borderColor: '#32ac15',
                color: '#f5f5f5',
                data: [],
            },
            {
                label: 'Delegators',
                backgroundColor: '#1596ac',
                borderColor: '#1596ac',
                color: '#f5f5f5',
                data: [],
            },
            {
                label: 'Total Rewards',
                backgroundColor: 'rgb(200, 200, 200)',
                borderColor: 'rgb(200, 200, 200)',
                color: '#f5f5f5',
                data: [],
            }
        ]
    };

    let charts = [];

    function graphsAlltime() {
        fetch('/era?limit=10000')
            .then( response => response.json() )
            .then( graphsResponse );
    }

    function showApi() {
        location.hash = '#/';
        document.getElementById( 'link-api' ).className='active';
        document.getElementById( 'link-charts' ).className='';
        document.getElementById( 'charts' ).style.display = 'none';
        document.querySelector( '#swagger-ui > section > .swagger-ui > div > .wrapper:not(.information-container) ')
            .style.display = 'block';
    }

    function showCharts() { console.log(111)
        location.hash = '';
        document.getElementById( 'link-api' ).className='';
        document.getElementById( 'link-charts' ).className='active';
        document.getElementById( 'charts' ).style.display = 'block';
        document.querySelector( '#swagger-ui > section > .swagger-ui > div > .wrapper:not(.information-container) ')
            .style.display = 'none';
    }

    function numberWithCommas( x ) {
        return x.toString().replace( /\B(?=(\d{3})+(?!\d))/g, ',' );
    }

    function graphsResponse( response ) {

        const transfersSum = response.reduce( ( a, b ) => {
            return a + b.transfersCount || 0;
        }, 0 );

        const deploysSum = response.reduce( ( a, b ) => {
            return a + b.deploysCount || 0;
        }, 0 );

        document.getElementById( 'deploys-transfers' ).innerText =
            deploysSum + ' / ' + transfersSum;


        data.labels = response.map(era => {
            return era.id
        });
        data.labels.reverse();
        data.datasets[0].data = response.map(era => {
            return era.circulatingSupply;
        });
        data.datasets[0].data.reverse();

        stakedData.labels = response.map(era => {
            return era.id
        });
        stakedData.labels.reverse();
        stakedData.datasets[0].data = response.map(era => {
            return era.validatorsWeights;
        });
        stakedData.datasets[0].data.reverse();

        totalSupply.labels = response.map(era => {
            return era.id
        });
        totalSupply.labels.reverse();
        totalSupply.datasets[0].data = response.map( era => {
            return era.totalSupply;
        });
        totalSupply.datasets[0].data.reverse();

        transactions.labels = response.map(era => {
            return era.id
        });
        transactions.labels.reverse();
        transactions.datasets[0].data = response.map( era => {
            return era.deploysCount || 0;
        } );
        transactions.datasets[0].data.reverse();

        transactions.datasets[1].data = response.map( era => {
            return era.transfersCount || 0;
        } );
        transactions.datasets[1].data.reverse();

        validatorsRewards.labels = response.map( era => {
            return era.id
        });
        validatorsRewards.labels.reverse();
        validatorsRewards.datasets[0].data = response.map(era => {
            return era.validatorsRewards;
        });
        validatorsRewards.datasets[0].data.reverse();

        validatorsRewards.datasets[1].data = response.map(era => {
            return era.delegatorsRewards;
        });
        validatorsRewards.datasets[1].data.reverse();

        validatorsRewards.datasets[2].data = response.map(era => {
            return era.rewards;
        });
        validatorsRewards.datasets[2].data.reverse();

        validatorsDelegatorsCount.labels = response.map(era => {
            return era.id
        });
        validatorsDelegatorsCount.labels.reverse();
        validatorsDelegatorsCount.datasets[0].data = response.map(era => {
            return era.validatorsCount;
        });
        validatorsDelegatorsCount.datasets[0].data.reverse();

        validatorsDelegatorsCount.datasets[1].data = response.map(era => {
            return era.delegatorsCount;
        });
        validatorsDelegatorsCount.datasets[1].data.reverse();

        for ( let i = 0; i < charts.length; i++ ) {
            try {
                charts[i].destroy();
            } catch(e){}
        }

        charts = [];

        Chart.defaults.color = '#f5f5f5';

        const grapharea1 = document.getElementById( 'myChart1' ).getContext( '2d' );
        charts[0] = new Chart(
            grapharea1,
            {
                type: 'line',
                data: Object.assign( {}, data ),
                options: {}
            }
        );

        const grapharea2 = document.getElementById( 'myChart2' ).getContext( '2d' );
        charts[1] = new Chart(
            grapharea2,
            {
                type: 'line',
                data: Object.assign({}, stakedData),
                options: {}
            }
        );

        const grapharea4 = document.getElementById( 'myChart4' ).getContext( '2d' );
        charts[3] = new Chart(
            grapharea4,
            {
                type: 'line',
                data: Object.assign({}, validatorsRewards),
                options: {}
            }
        );

        const grapharea5 = document.getElementById( 'myChart5' ).getContext( '2d' );
        charts[4] = new Chart(
            grapharea5,
            {
                type: 'line',
                data: Object.assign({}, transactions),
                options: {}
            }
        );

        const grapharea6 = document.getElementById( 'myChart6' ).getContext( '2d' );
        charts[5] = new Chart(
            grapharea6,
            {
                type: 'line',
                data: Object.assign({}, validatorsDelegatorsCount),
                options: {}
            }
        );

        document.querySelector( '.footer' ).style.display = 'block';
    }
</script>
<div class="footer">
    <div class="inner">
        <div class="first-block">
            Platform Development and Research
            <div><a href="https://art3mis.cloud">ART3MIS.CLOUD</a></div>
        </div>
        <div class="second-block">
            Casper Network
            <div><a href="https://casperlabs.io">https://casperlabs.io</a></div>
        </div>
    </div>
</div>
</body>

</html>
